// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux16(a=a,b=b,sel=sel[0],out=out1);
	Mux16(a=c,b=d,sel=sel[0],out=out2);
	Mux16(a=out1,b=out2,sel=sel[1],out=out);

	/**Mux(a=a[0],b=b[0],sel=sel[0],out=out1[0]);
	Mux(a=a[1],b=b[1],sel=sel[0],out=out1[1]);
	Mux(a=a[2],b=b[2],sel=sel[0],out=out1[2]);
	Mux(a=a[3],b=b[3],sel=sel[0],out=out1[3]);
	Mux(a=a[4],b=b[4],sel=sel[0],out=out1[4]);
	Mux(a=a[5],b=b[5],sel=sel[0],out=out1[5]);
	Mux(a=a[6],b=b[6],sel=sel[0],out=out1[6]);
	Mux(a=a[7],b=b[7],sel=sel[0],out=out1[7]);
	Mux(a=a[8],b=b[8],sel=sel[0],out=out1[8]);
	Mux(a=a[9],b=b[9],sel=sel[0],out=out1[9]);
	Mux(a=a[10],b=b[10],sel=sel[0],out=out1[10]);
	Mux(a=a[11],b=b[11],sel=sel[0],out=out1[11]);
	Mux(a=a[12],b=b[12],sel=sel[0],out=out1[12]);
	Mux(a=a[13],b=b[13],sel=sel[0],out=out1[13]);
	Mux(a=a[14],b=b[14],sel=sel[0],out=out1[14]);
	Mux(a=a[15],b=b[15],sel=sel[0],out=out1[15]);

	Mux(a=a[0],b=d[0],sel=sel[0],out=out2[0]);
	Mux(a=c[1],b=d[1],sel=sel[0],out=out2[1]);
	Mux(a=c[2],b=d[2],sel=sel[0],out=out2[2]);
	Mux(a=c[3],b=d[3],sel=sel[0],out=out2[3]);
	Mux(a=c[4],b=d[4],sel=sel[0],out=out2[4]);
	Mux(a=c[5],b=d[5],sel=sel[0],out=out2[5]);
	Mux(a=c[6],b=d[6],sel=sel[0],out=out2[6]);
	Mux(a=c[7],b=d[7],sel=sel[0],out=out2[7]);
	Mux(a=c[8],b=d[8],sel=sel[0],out=out2[8]);
	Mux(a=c[9],b=d[9],sel=sel[0],out=out2[9]);
	Mux(a=c[10],b=d[10],sel=sel[0],out=out2[10]);
	Mux(a=c[11],b=d[11],sel=sel[0],out=out2[11]);
	Mux(a=c[12],b=d[12],sel=sel[0],out=out2[12]);
	Mux(a=c[13],b=d[13],sel=sel[0],out=out2[13]);
	Mux(a=c[14],b=d[14],sel=sel[0],out=out2[14]);
	Mux(a=c[15],b=d[15],sel=sel[0],out=out2[15]);

	Mux(a=out1[0],b=out2[0],sel=sel[1],out=out[0]);
	Mux(a=out1[1],b=out2[1],sel=sel[1],out=out[1]);
	Mux(a=out1[2],b=out2[2],sel=sel[1],out=out[2]);
	Mux(a=out1[3],b=out2[3],sel=sel[1],out=out[3]);
	Mux(a=out1[4],b=out2[4],sel=sel[1],out=out[4]);
	Mux(a=out1[5],b=out2[5],sel=sel[1],out=out[5]);
	Mux(a=out1[6],b=out2[6],sel=sel[1],out=out[6]);
	Mux(a=out1[7],b=out2[7],sel=sel[1],out=out[7]);
	Mux(a=out1[8],b=out2[8],sel=sel[1],out=out[8]);
	Mux(a=out1[9],b=out2[9],sel=sel[1],out=out[9]);
	Mux(a=out1[10],b=out2[10],sel=sel[1],out=out[10]);
	Mux(a=out1[11],b=out2[11],sel=sel[1],out=out[11]);
	Mux(a=out1[12],b=out2[12],sel=sel[1],out=out[12]);
	Mux(a=out1[13],b=out2[13],sel=sel[1],out=out[13]);
	Mux(a=out1[14],b=out2[14],sel=sel[1],out=out[14]);
	Mux(a=out1[15],b=out2[15],sel=sel[1],out=out[15]);

	
*/

/**Mux16(a[0..15]=a[0..15],b=d[0..15],sel=sel[0],out[0..15]=outAD[0..15]);
Mux16(a=c[0..15],b=b[0..15],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[0..15]);*/

//Mux(a[16]=a[0..15],b[16]=d[0..15],sel=sel[0],out=outAD); 
//Mux(a[16]=c[0..15],b[16]=b[0..15],sel=sel[1],out=outCB);
//Xor(a=sel[0],b=sel[1],out=outSel);
//Mux(a=outAD,b=outCB,sel=outSel,out=out[0..15]);
/**Mux(a=a[1],b=d[1],sel=sel[0],out=outAD); 
Mux(a=c[1],b=b[1],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[1]);
Mux(a=a[2],b=d[2],sel=sel[0],out=outAD); 
Mux(a=c[2],b=b[2],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[2]);
Mux(a=a[3],b=d[3],sel=sel[0],out=outAD); 
Mux(a=c[3],b=b[3],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[3]);
Mux(a=a[4],b=d[4],sel=sel[0],out=outAD); 
Mux(a=c[4],b=b[4],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[4]);
Mux(a=a[5],b=d[5],sel=sel[0],out=outAD); 
Mux(a=c[5],b=b[5],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[5]);
Mux(a=a[6],b=d[6],sel=sel[0],out=outAD); 
Mux(a=c[6],b=b[6],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[6]);
Mux(a=a[7],b=d[7],sel=sel[0],out=outAD); 
Mux(a=c[7],b=b[7],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[7]);
Mux(a=a[8],b=d[8],sel=sel[0],out=outAD); 
Mux(a=c[8],b=b[8],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[8]);
Mux(a=a[9],b=d[9],sel=sel[0],out=outAD); 
Mux(a=c[9],b=b[9],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[9]);
Mux(a=a[10],b=d[10],sel=sel[0],out=outAD); 
Mux(a=c[10],b=b[10],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[10]);
Mux(a=a[11],b=d[11],sel=sel[0],out=outAD); 
Mux(a=c[11],b=b[11],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[11]);
Mux(a=a[12],b=d[12],sel=sel[0],out=outAD); 
Mux(a=c[12],b=b[12],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[12]);
Mux(a=a[13],b=d[13],sel=sel[0],out=outAD); 
Mux(a=c[13],b=b[13],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[13]);
Mux(a=a[14],b=d[14],sel=sel[0],out=outAD); 
Mux(a=c[14],b=b[14],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[14]);
Mux(a=a[15],b=d[15],sel=sel[0],out=outAD); 
Mux(a=c[15],b=b[15],sel=sel[1],out=outCB);
Xor(a=sel[0],b=sel[1],out=outSel);
Mux(a=outAD,b=outCB,sel=outSel,out=out[15]);
*/}